
@model  IEnumerable<MyVitarak.Models.EmployeeDetails>

@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
@{
    ViewBag.Title = "EmployeeList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="marginTop140 marginBottom40">
    <div class="col-xs-12">
        <div class="btn-toolbar pull-left" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group" role="group" aria-label="First group">
                <div class="btn btn-default">
                    <div class="form-check height20Pixel">
                        <input class="form-check-input" type="checkbox" id="selectAll">
                        <label class="form-check-label verticalAlignTop" id="boxes" for="selectAll"></label>
                    </div>
                </div>

            </div>
        </div>
        <form class="navbar-form pull-left marginTop0">
            <input type="text" id="txtName" class="form-control" placeholder="Search by Emp Name">
        </form>
        <div class="btn-group pull-right">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-window-maximize" aria-hidden="true"></i> <span class="caret"></span></button>
            <ul class="dropdown-menu">
                <li><a href="@Url.Action("importexcel", "Master",new {@Mastername =  Session["MasterName"]})">Import Excel</a></li>

            </ul>
        </div>

        @*<a href="@Url.Action("importexcel", "Master",new {@Mastername = Session["MasterName"]})"><button type="button" class="btn btn-primary pull-right marginRight15px"><i class="fa fa-download" aria-hidden="true"></i> Import</button></a>*@
        @*<a href="@Url.Action("Add_Employee", "Master")" data-toggle="modal" data-target="#mdlAddEmployee"><input type="button" value=" + Employees" class="btn btn-primary dropdown-toggle pull-right marginRight15px"></a>*@
        <button type="button" class="btn btn-primary dropdown-toggle pull-right marginRight15px" href="@Url.Action("Add_Employee", "Master")" data-toggle="modal" data-target="#mdlAddEmployee"><i class="fa fa-plus" aria-hidden="true"></i> Employees</button>

        <nav class="pull-right marginRight15px" style="margin-top: -18px;">
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("EmployeeList", "Master", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 2, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
            @if (Model.Count() == 0)
            {
                <ul class="pagination margin0"></ul>
            }
        </nav>

        @*<div class="paginationCount pull-right marginTB7px marginRight15px"><b>1-30</b> of <b>250</b> Customers</div>*@

    </div>
    <div id="grid1" class="col-xs-12" style="margin-top:-15px">
        @Html.Partial("EmployeeGridList")
    </div>
</div>

@*<div id="mdlAddEmployee" class="modal fade" style="margin-left: 20%;padding-top: 50px;width: 60%;" data-backdrop="static" data-keyboard="false" role="dialog">
</div>

<div id="mdlEditEmployee" class="modal fade" style="margin-left: 20%;padding-top: 50px;width: 60%;" data-backdrop="static" data-keyboard="false" role="dialog">
</div>*@

<div class="modal fade bs-example-modal-md" id="mdlAddEmployee" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
</div>
<div class="modal fade bs-example-modal-md" id="mdlEditEmployee" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
</div>
<script>
    $("#EmployeeIndex").addClass("active");
    $(document).ready(function () {     

        function countChecked() {
            var a = $("input:checked").length;
            $("#boxes").text(a);
        }
        $(document).on("click", "#one", function () {

            countChecked();
        })
        $(document).on("click", "#selectAll", function () {

            var check = $(this).prop("checked");
            if (check) {
                $(':checkbox').each(function () {
                    var b = $("input:checkbox").length;
                    b = b - 1;
                    $("#boxes").text(b);
                });
            }
            else {
                $("#boxes").text(0);
            }

        })
    });

   
    $("#selectAll").change(function () {

        $('input:checkbox').not(this).prop('checked', this.checked);
    });
    var str = window.location.href;
    var lastLetter = str[str.length], i, temp;
    var con = "";

    for (i = 0; i < str.length; i++) {
        if (str[i] == '=') {
            myfun(i);
            break;
        }
    }

    function myfun(temp) {

        temp = temp + 1;
        for (i = temp; i < [str.length]; i++) {

            con = con + str[i];
        }
        parseInt(con);

    }

    $('#txtName').keyup(function () {
        $("#boxes").text(0);
                $('#pageLoader').show();

                $.ajax({
                    url: "@Url.Action("LoadData", "Master")",
                    contentType: "application/json",
                    data: JSON.stringify({ page: con, Name: $('#txtName').val() }),
                    dataType: "text",
                    type: "POST",
                    async: true,
                    success: function (data) {
                        $('#grid1').html(data);

                    },
                    error: function (data) {
                        $('#pageLoader').hide();
                    },
                    complete: function () {
                        $('#pageLoader').hide();
                    }
                });

    });
             
    function selectAll() {
        var items = document.getElementsByName('acs');
        for (var i = 0; i < items.length; i++) {
            if (items[i].type == 'checkbox')
                items[i].checked = true;
        }
    }

    function UnSelectAll() {
        var items = document.getElementsByName('acs');
        for (var i = 0; i < items.length; i++) {
            if (items[i].type == 'checkbox')
                items[i].checked = false;
        }
    }

   
</script>