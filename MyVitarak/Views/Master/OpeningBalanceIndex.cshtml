@model  IEnumerable<MyVitarak.Models.OpeningBalanceDeatils>

@using PagedList;
@using PagedList.Mvc;
@using GridMvc.Html
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
@{
    ViewBag.Title = "OpeningBalanceIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="marginTop140 marginBottom40">
    <div class="col-xs-12">
        <div class="btn-toolbar pull-left" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group" role="group" aria-label="First group">
                <div class="btn btn-default">
                    <div class="form-check height20Pixel">
                        <input class="form-check-input" type="checkbox" id="selectAll">
                        <label class="form-check-label verticalAlignTop" id="boxes" for="selectAll"></label>
                    </div>
                </div>
                @*<button type=button class="btn btn-default"><i class="fa fa-ban" aria-hidden="true"></i> Disqualify</button>
                <button type=button class="btn btn-default"><i class="fa fa-envelope" aria-hidden="true"></i> Send email</button>
                <button type=button class="btn btn-default"><i class="fa fa-tag" aria-hidden="true"></i> Add tags</button>
                <div class="btn-group">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-ellipsis-h" aria-hidden="true"></i> More span class="caret"></span</button>
                    <ul class="dropdown-menu">
                        <li><a href="#">Action</a></li>
                        <li><a href="#">Another action</a></li>
                        <li><a href="#">Something else here</a></li>
                        <li role="separator" class="divider"></li>
                        <li><a href="#">Separated link</a></li>
                    </ul>
                </div>*@
            </div>
        </div>
        <form class="navbar-form pull-left marginTop0">
            <input type="text" id="txtName" class="form-control" placeholder="Search by Cust Name">
        </form>

        @*<div class="btn-group pull-right">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-window-maximize" aria-hidden="true"></i> <span class="caret"></span></button>
            <ul class="dropdown-menu">
                <li class="float-right">
                    <a class="nav-link" href="@Url.Action("importexcel", "Master",new {@Mastername = Session["MasterName"]})"><i class="icon icon-plus-circle"> </i> Import Excel </a>
                </li>
                <li><a href="#">Another action</a></li>
                <li><a href="#">Something else here</a></li>
                <li role="separator" class="divider"></li>
                <li><a href="#">Separated link</a></li>
            </ul>
        </div>*@
        @*<a href="@Url.Action("importexcel", "Master",new {@Mastername = Session["MasterName"]})"><button type="button" class="btn btn-primary pull-right marginRight15px"><i class="fa fa-download" aria-hidden="true"></i> Import</button></a>
        <a href="@Url.Action("Add_Employee", "Master")" data-toggle="modal" data-target="#mdlAddEmployee"><input type="button" value=" + Employees" class="btn btn-primary dropdown-toggle pull-right marginRight15px"></a>*@
        <button type="button" class="btn btn-primary pull-right marginRight15px" onclick="SaveOpeningBalance();"><i class="fa fa-save" aria-hidden="true"></i> Save</button>

        <nav class="pull-right marginRight5px" style="margin-top: -18px;">
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("OpeningBalanceIndex", "Master", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 2, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "mgrid", OnComplete = "PagedOnComplete" }))
            @if (Model.Count() == 0)
            {
                <ul class="pagination margin0"></ul>
            }
        </nav>

        @*<div class="paginationCount pull-right marginTB7px marginRight15px"><b>1-30</b> of <b>250</b> Customers</div>*@

    </div>
    <div id="grid1" class="col-xs-12" style="margin-top:-15px">
        @Html.Partial("Partial_OpeningBalanceList")
    </div>
</div>

<div id="mdlAddEmployee" class="modal fade" style="margin-left: 20%;padding-top: 50px;width: 60%;" data-backdrop="static" data-keyboard="false" role="dialog">
</div>

<div id="mdlEditEmployee" class="modal fade" style="margin-left: 20%;padding-top: 50px;width: 60%;" data-backdrop="static" data-keyboard="false" role="dialog">
</div>
<script>

    $(document).ready(function () {
        //// ########## Count Checked ########## //

        function countChecked() {
            var a = $("input:checked").length;
            $("#boxes").text(a);
        }
        $(document).on("click", ".form-check-input1", function () {

            countChecked();
        })
        $(document).on("click", "#selectAll", function () {

            var check = $(this).prop("checked");
            if (check) {
                $(':checkbox').each(function () {
                    var b = $("input:checkbox").length;
                    b = b - 1;
                    $("#boxes").text(b);
                });
            }
            else {
                $("#boxes").text(0);
            }

        })
    });
    $('#openingBal').addClass("active");    
    var str = window.location.href;
    var lastLetter = str[str.length], i, temp;
    var con = "";
    $("#selectAll").change(function () {

        $('input:checkbox').not(this).prop('checked', this.checked);
    });
    for (i = 0; i < str.length; i++) {
        if (str[i] == '=') {
            myfun(i);
            break;
        }
    }

    function myfun(temp) {

        temp = temp + 1;
        for (i = temp; i < [str.length]; i++) {

            con = con + str[i];
        }
        parseInt(con);

    }

    $('#txtName').keyup(function () {
        $("#boxes").text(0);
                $('#pageLoader').show();

                $.ajax({
                    url: "@Url.Action("LoadOpeningBalance", "Master")",
                    contentType: "application/json",
                    data: JSON.stringify({ page: con, Name: $('#txtName').val() }),
                    dataType: "text",
                    type: "POST",
                    async: true,
                    success: function (data) {
                        $('#grid1').html(data);

                    },
                    error: function (data) {
                        $('#pageLoader').hide();
                    },
                    complete: function () {
                        $('#pageLoader').hide();
                    }
                });

    });





   

        function SaveOpeningBalance() {

                var idArr = [];

                $('tbody tr').each(function (k, v) {
                    var trElement = $(this);
                    var tdVals = trElement.find('td:eq(0)').text().trim() + '~' +
                        trElement.find('td:eq(1)').text().trim() + '~' +
                        trElement.find('td:eq(2)').text().trim() + '~' +
                        trElement.find('td:eq(3)').text().trim()


                        idArr.push(tdVals);
            });




                var SaveLaneRate = [];
                for (var i = 0; i < idArr.length; i++) {
                    var arrElement = idArr[i].split("~");

                    item = {}
                    item["CustomerID"] = arrElement[0];
                    item["PreviousBalance"] = arrElement[3];

                    SaveLaneRate.push(item);

            }




                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Action("SaveOpeningBalance", "Master")",
                    method: 'POST',
                    async: 'false',
                    dataType: 'json',
                    data: JSON.stringify({
                        SaveLaneRate: SaveLaneRate
                    }),
                    success: function (result) {
                        alert("Opening Balance Added Successfully")
                        location.reload();
                    },
                    error: function () {
                        alert("Opening Balance Added Successfully")
                        location.reload();
                    }
                });
            }


</script>